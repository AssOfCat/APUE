命令解释器shell详细设计 
 
一、概述： 
本软件目的为开发一个linux环境下运行的命令解释器（uglyshell），其基础工程是Advanced Programming in the UNIX ® Environment, Third Edition此书中的Figure1.10.本软件在此基础上进行改进，增加如下功能：
（1）通过环境变量的设定，自定义命令提示符。
（2）通过组合键正常地退出程序。
（3）通过某种命令使用户提交的任务可以在后台运行。
（4）提供输入、输出重定向到文件地功能。
软件运行于Ubuntu18.04系统，正常运行需要系统已有的shell命令（例如ls、echo、make等基础命令）。软件负责模拟一个shell程序，处理用户的输入，调用相应程序实现不同的输出。 
 
二、项目需求： 
1. 程序从控制台执行，启动后显示一个命令提示符。例如 “->”。用户可以通过给特定的环境变量赋值来改变命令提示符的形式；
2. 通过某个特殊的命令或按键组合可以正常地关闭本程序；
3. 提供后台运行机制。用户提交的任务可以通过某种指示使之在后台运行，例如：-> bg job1 <CR>将使任务 job1 在后台运行，并马上返回给用户一个新的提示符；
4. 提供输出重定向。通过指定文件名将任务的所有输出覆盖写到文件中而不是送到标准输出上；
5. 提供输入重定向。通过指定文件名使得任务从相应的文件中去获取所需的数据，而不是从标准输入上。

三、系统功能： 
 本软件实现以下功能：
（1）在本目录下通过 ./uglyshell 启动软件，在弹出的命令提示符后进行输入。
（2）在启动软件之前通过修改环境变量(如 export PROTYPE=*)来指定命令提示符。
（3）软件启动后，按下组合按键ctrl+D来退出程序。
（4）用户在提交的命令结尾键入 & 来指示其任务在后台运行。
（5）通过 <  FileName 来实现输入重定向， >  FileName 来实现输出重定向。
 
四、平台： 
1、开发环境 
 Vmware虚拟机/Ubuntu 18.06/gcc
2、运行环境 
 Ubuntu 18.06/gcc
五、系统模块： 
主要文件：
Makefile用于编译
loop.c用于测试的死循环源码
uglyshell.c源码
uglyshell编译生成的程序
loop用于测试的死循环程序
主要函数：
void	sig_int(int);/* 捕捉信号*/
void	promptShow();/*打印命令提示符 */
int	commandHandling(char *inCommand ,
				char **outComand ,
				int *isBg ,
				char *inRDFile ,
				char *outRDFile);	/* 处理输入命令*/
int main(void) 	/* 主函数*/
 
